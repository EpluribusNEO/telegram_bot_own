from aiogram import Bot, Dispatcher, types, executor
from random import randint
from asyncio import sleep
import dotenv
from os import environ
from OWM import TOWM



dotenv.load_dotenv('.env')
bot_token = environ['bot_token']
owm_key = environ['owm']
z_owm = TOWM(owm_key)
bot = Bot(bot_token)
dp = Dispatcher(bot)



@dp.message_handler(commands=['start'])
async def start(message: types.Message):
	username = message.from_user.username
	msg = f"<b>Hello</b>, <i>{username}!</i>\n–í–≤–µ–¥–∏—Ç–µ /help - –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
	await bot.send_message(message.chat.id, msg, parse_mode='html')

@dp.message_handler(commands=['coin'])
async def coin(message: types.Message):
	rnd = randint(0, 1001)
	coin_status = '–†–µ–±—Ä–æ'
	if rnd % 2 == 0:
		coin_status = '–û—Ä—ë–ª'
	else:
		coin_status = '–†–µ—à–∫–∞'
	await bot.send_message(message.chat.id, f"<b>{coin_status}</b>", parse_mode='html')


@dp.message_handler(commands=['whoami'])
async def whoami(message: types.Message):
	first_name = message.from_user.first_name
	last_name =message.from_user.last_name
	username = message.from_user.username
	id = message.from_user.id
	whoami_msg = f"first name: {first_name}\nlast name: {last_name}\nuser name: {username}\nid: {id}"
	await bot.send_message(message.chat.id, whoami_msg)

@dp.message_handler(commands=['website'])
async def website(message: types.Message):
	myurl = "https://ds-portfolio.netlify.app"
	markup = types.InlineKeyboardMarkup()
	website = types.InlineKeyboardButton("–ü–æ—Å–µ—Ç–∏—Ç—å –≤–µ–± —Å–∞–π—Ç", url=myurl)
	markup.add(website)
	await bot.send_message(message.chat.id, f'<a href="{myurl}">Website</a>', parse_mode='html', reply_markup=markup)

@dp.message_handler(commands=['about'])
async def about(message: types.Message):
	text = f'Created by: <b>EPluribusNEO</b>\n' \
	       f'WebSite: <a href="https://ds-portfolio.netlify.app">Website</a>\n' \
	       f'GitHub: <a href="https://github.com/EpluribusNEO">GitHub</a>\n' \
	       f'Date: 14 August 2022\n' \
	       f'\n–í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º.'
	markup = types.InlineKeyboardMarkup()
	github = types.InlineKeyboardButton("GitHub", url="https://github.com/EpluribusNEO")
	website = types.InlineKeyboardButton("Website", url="https://ds-portfolio.netlify.app")
	markup.add(website, github)
	await bot.send_message(message.chat.id, text, parse_mode='html', reply_markup=markup)

@dp.message_handler(commands=['help'])
async def help(message: types.Message):
	text_help = f'–í–≤–µ–¥–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –∫–æ–º–∞–Ω–¥:\n' \
	            f'<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n' \
	            f'/start - –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã\n' \
	            f'/weather <i>–ù–∞–∑–≤–∞–Ω–∏–µ –ì–æ—Ä–æ–¥–∞</i> - –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã\n' \
	            f'/–ø–æ–≥–æ–¥–∞ <i>–ù–∞–∑–≤–∞–Ω–∏–µ –ì–æ—Ä–æ–¥–∞</i> - –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã\n' \
	            f'\n<b>–ò–≥—Ä–∞:</b>\n' \
	            f'–û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É c–º–∞–π–ª–∏–∫ üé≤ "–∏–≥—Ä–∞–ª—å–Ω—ã–µ –∫–æ—Å—Ç–∏" –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã\n' \
	            f'\n<b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n' \
	            f'/coin - –ü–æ–¥–±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É\n' \
	            f'/whoami - –í—ã–≤–µ—Å—Ç–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n' \
	            f'/website - –í—ã–≤–µ—Å—Ç–∏ –∏—Å—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ–±—Å–∞–π—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞\n' \
	            f'/about - –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n' \
	            f'/qr - –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—á–∫—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞\n' \
	            f'/help - –í—ã–≤–µ—Å—Ç–∏ —Å–ø—Ä–∞–≤–∫—É –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö'
	await bot.send_message(message.chat.id, text_help, parse_mode='html')

@dp.message_handler(commands=['qr'])
async def photo(message: types.Message):
	photo = open('z-qr.png', 'rb')
	await bot.send_photo(message.chat.id, photo)

@dp.message_handler(content_types=['photo'])
async def get_user_photo(message: types.Message):
	usr_msg_id = message.message_id
	await bot.send_message(message.chat.id, 'Cool Photo!', reply_to_message_id=usr_msg_id)

@dp.message_handler(content_types=['sticker'])
async def sticker(message: types.Message):
	await bot.send_message(message.chat.id, "–°–¢–ò–ö–ï–†")

@dp.message_handler(content_types=['dice'])
async def dice_game(message: types.Message):
	usr_point = message['dice']['value']
	usr_msg_id = message.message_id
	await sleep(5)
	bot_data = await bot.send_dice(message.chat.id, reply_to_message_id=usr_msg_id)
	bot_point = bot_data['dice']['value']
	await sleep(5)
	if usr_point > bot_point:
		await bot.send_message(message.chat.id, '–í—ã –ø–æ–±–µ–¥–∏–ª–∏!', reply_to_message_id=usr_msg_id)
	elif usr_point < bot_point:
		await bot.send_message(message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!", reply_to_message_id=usr_msg_id)
	else:
		await bot.send_message(message.chat.id, "–ù–∏—á—å—è!", reply_to_message_id=usr_msg_id)


@dp.message_handler(commands=['weather', '–ø–æ–≥–æ–¥–∞'])
async def weather(message: types.Message):
	command = message['text']
	city = command.split(maxsplit=1)[1]
	weather = z_owm.get_weather(city)
	await bot.send_message(message.chat.id, weather)

@dp.message_handler(commands=['echo'])
async def echo(message: types.Message):
	msg = message['text'].split(maxsplit=1)[1]
	await bot.send_message(message.chat.id, msg)

executor.start_polling(dp, loop=True)
